// <auto-generated />
using LimbooCards.Infra.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LimbooCards.Infra.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250929184258_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LimbooCards.Domain.Entities.Planner", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Planners", (string)null);
                });

            modelBuilder.Entity("LimbooCards.Domain.Entities.PlannerBucket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlannerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlannerId");

                    b.ToTable("PlannerBuckets", (string)null);
                });

            modelBuilder.Entity("LimbooCards.Domain.Entities.Planner", b =>
                {
                    b.OwnsMany("LimbooCards.Domain.Entities.PinRule", "PinRules", b1 =>
                        {
                            b1.Property<string>("PlannerId")
                                .HasColumnType("text");

                            b1.Property<string>("Expression")
                                .HasColumnType("text");

                            b1.Property<int>("PinColor")
                                .HasColumnType("integer");

                            b1.HasKey("PlannerId", "Expression");

                            b1.ToTable("PlannerPinRules", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlannerId");
                        });

                    b.Navigation("PinRules");
                });

            modelBuilder.Entity("LimbooCards.Domain.Entities.PlannerBucket", b =>
                {
                    b.HasOne("LimbooCards.Domain.Entities.Planner", null)
                        .WithMany("Buckets")
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LimbooCards.Domain.Entities.Planner", b =>
                {
                    b.Navigation("Buckets");
                });
#pragma warning restore 612, 618
        }
    }
}
